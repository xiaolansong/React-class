{"version":3,"sources":["index.js"],"names":["List","props","data","map","item","key","id","title","Home","getData","page","fetch","then","res","json","setState","console","log","state","this","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uMAGMA,EAAK,SAACC,GACV,OAAO,4BAEHA,EAAMC,KAAKC,KAAI,SAACC,GAAD,OAAQ,wBAAIC,IAAKD,EAAKE,IAAKF,EAAKG,YAM/CC,E,kDACJ,aAAc,IAAD,8BACX,gBAaFC,QAAQ,SAACC,GACPC,MAAM,0CAA0CD,GAC/CE,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,YAAW,IAATV,EAAQ,EAARA,KACN,EAAKa,SAAS,CAACb,YAEjBc,QAAQC,IAAIP,IAlBZ,EAAKQ,MAAQ,CACXhB,KAAK,IAEPc,QAAQC,IAAI,eALD,E,gEAOO,IAAD,OACjBN,MAAM,qCACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,YAAW,IAATV,EAAQ,EAARA,KACN,EAAKa,SAAS,CAACb,c,+BAWV,IAAD,OACCA,EAAMiB,KAAKD,MAAXhB,KAEP,OAAO,6BADI,CAAC,EAAE,EAAE,EAAE,EAAE,GAGXC,KAAI,SAACC,GAAD,OACP,4BACAC,IAAKD,EACLgB,QAAS,kBAAI,EAAKX,QAAQL,KACzBA,MAGL,kBAACJ,EAAD,CAAME,KAAMA,S,GAnCCmB,IAAMC,WAwCzBC,IAASC,OACP,kBAAChB,EAAD,MACAiB,SAASC,eAAe,W","file":"static/js/main.1bd28e81.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst List=(props)=>{\r\n  return <ul>\r\n    {\r\n      props.data.map((item)=><li key={item.id}>{item.title}</li>)\r\n    }\r\n  </ul>\r\n}\r\n\r\n\r\nclass Home extends React.Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      data:[]\r\n    }\r\n    console.log(\"constructor\");\r\n  }\r\n  componentDidMount(){//在render之后执行\r\n    fetch(\"https://cnodejs.org/api/v1/topics\")\r\n    .then(res=>res.json())\r\n    .then(({data})=>{\r\n      this.setState({data})\r\n    })\r\n  }\r\n  getData=(page)=>{\r\n    fetch(\"https://cnodejs.org/api/v1/topics?page=\"+page)\r\n    .then(res=>res.json())\r\n    .then(({data})=>{\r\n      this.setState({data})\r\n    })  \r\n    console.log(page);\r\n  }\r\n  render(){\r\n    const {data}=this.state;\r\n    const btns=[1,2,3,4,5];\r\n    return <div>\r\n      {\r\n        btns.map((item)=>(\r\n          <button \r\n          key={item} \r\n          onClick={()=>this.getData(item)}>\r\n          {item}\r\n          </button>))\r\n      }\r\n      <List data={data}/>\r\n    </div>\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Home />,\r\n  document.getElementById('root')\r\n  );\r\n  //组件声明\r\n  //函数组件\r\n  //UI(展示)组件，木偶组件\r\n  // function App(props){//形参\r\n  //   const{title,id} = props;\r\n  //   return <div>\r\n  //     <div>{title}</div>\r\n  //     <div>{id}</div>\r\n  //   </div>\r\n  // }\r\n  \r\n  //智能组件 生命周期只在类组件中有\r\n// class Demo extends React.Component{\r\n  //   render(){\r\n//     return <div>\r\n//       <App title=\"任意值\" id='app'/>\r\n//       <App title=\"任意值\" id='app'/>\r\n//       <App title=\"任意值\" id='app'/>\r\n//       <App title=\"任意值\" id='app'/>\r\n\r\n//     </div>\r\n//   }\r\n// }\r\n\r\n// ReactDOM.render(\r\n  //   <div />,\r\n  //   //<Demo title='任意值' id=\"app\"/>,//组件调用方式,传参加属性,传任意值\r\n//   document.getElementById('root')\r\n// );\r\n// let  ele = <h1 id=\"title\" className=\"tit\">\r\n//   <div>当前时间</div>\r\n//   {new Date( ).toLocaleString( )}\r\n//   </h1>;\r\n\r\n// let  ele = <h1 id=\"title\" className=\"tit\">\r\n//   <div>hello</div>\r\n//   <div>hello</div>\r\n//   <div>hello</div>\r\n//   world\r\n//   </h1>;\r\n// // let ele = React.createElement(\r\n  // //   'h1',\r\n  // //   {id:'title'},\r\n  // //   'hello react');\r\n  \r\n  // console.log(ele);\r\n  // // 将JSX对象渲染到DOM中\r\n  // let ReactDOM = {\r\n    //   render(eleObj,cantainer){\r\n      //     // 解构\r\n      //     const{type,props} = eleObj;\r\n      //     // 创建第一层节点\r\n      //     let ele = document.createElement(type);\r\n      //     // 遍历属性对象，降属性添加到第一层节点对象上\r\n      //     for (const prop in props) {\r\n        //       if(prop == 'children'){\r\n          //         if(typeof props.children == 'string'){\r\n            //           const txtNode = document.createTextNode(props.children)\r\n            //           ele.appendChild(txtNode);\r\n            //           break;\r\n            //         }\r\n            //       // 将第一层节点对象的子元素添加进去\r\n            //         props.children.forEach(child => {\r\n              //           if(typeof child == 'string'){\r\n                //             const txtNode = document.createTextNode(child);\r\n                //             ele.appendChild(txtNode);\r\n                //           }else{\r\n//             ReactDOM.render(child,ele);\r\n//           }\r\n//         });\r\n//       }else{\r\n  //         ele[prop] = props[prop];\r\n  //         // ele.setAttribute('class',props[prop]);\r\n  //       }\r\n  //     }\r\n  //     // 将第一层DOM节点添加到container中\r\n  //     cantainer.appendChild(ele)\r\n  //   }\r\n  // }\r\n  \r\n  // ReactDOM.render(\r\n    //   ele,\r\n    //   document.getElementById('root')\r\n    // );\r\n    \r\n    // import $ from 'jquery';\r\n    // console.log($);\r\n    \r\n    //alt+上下键 移动一行\r\n    //alt+shift+上下键 复制一行\r\n    //按住alt,鼠标点击\r\n    //ctrl shift 左右键\r\n    //ctrl shift l 选中所有词\r\n    \r\n    // If you want your app to work offline and load faster, you can change\r\n    // unregister() to register() below. Note this comes with some pitfalls.\r\n    // Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}